from androguard.core.bytecodes.dvm import DalvikVMFormat
from androguard.core.analysis.analysis import VMAnalysis
from androguard.decompiler.decompiler import DecompilerDAD
from androguard.core.bytecodes.apk import APK
from androguard.core.analysis import analysis
from androguard.core.bytecodes import dvm
import math
import hashlib
import glob, os

#To extract permission of APK file from Androguard
def extract_features(file_path):
    #result = []
    try:
        a = APK(file_path)
        d = DalvikVMFormat(a.get_dex())
        dx = VMAnalysis(d)
        vm = dvm.DalvikVMFormat(a.get_dex())
        vmx = analysis.uVMAnalysis(vm)
        d.set_vmanalysis(dx)
        d.set_decompiler(DecompilerDAD(d, dx))
    except:
        return None


    return a.get_permissions()

#Extracting permission from apk in a malware folder and removing redundant permission
if __name__ == "__main__":
    os.chdir("C:\\Users\\SHAHZAD\\Desktop\\Complete_Ans\Malware")  #Folder path of Beningn apk
    max_case = 430    #Total number of apk in a folder 
    i = 1
    permission_list = []
    for file in glob.glob("*"):
        if i<=max_case:
            permissions = extract_features(file)
            if permissions is None:
                pass
            else:
                for permission in permissions:
                    if permission not in permission_list:
                        permission_list.append(permission)
                        print(permission)
            print ("Progress: ",str((float(i)/float(max_case))*100.00),"%" )  #it will show how much file it process
        i+=1

   #writing the permission in a txt file
    with open('unique_malware_permission.txt','w+') as op:
      for permission in permission_list:
        op.write(str(permission))
        op.write('\n')
