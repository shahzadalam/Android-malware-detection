
"""
@author: shahzad

Calculating the pmi value from contengency file of each permission
"""
#Pointwise mutual information (pmi)
#pmi=log(p(x,y)/p(x)p(y))
#p(x,y)=probability of feature 'x' and 'y'
#p(x)=probability of 'x' in documents
#p(y)=probability of 'y' in documents
import numpy
if __name__ == "__main__":
    with open('contengency_table.txt','r') as fp:
       
       
        res1 = []
        for i,line in enumerate(fp):
                vc = line.replace('\n','').replace('[','').replace(']','').replace(', ',':').split(' ')
            
                ip_vector1 = vc[1].split(':')
                ip_vector=ip_vector1[0].split(',')
                Nfc = int(ip_vector[2]) #Number of document present for a class
                N = int(ip_vector[0])+int(ip_vector[1])+int(ip_vector[2])+int(ip_vector[3]) # Total number of Documents.
                Nf = int(ip_vector[0])+int(ip_vector[2])# Number of documents containing a features
                Nck = int(ip_vector[2])+int(ip_vector[3])#Total documents present for any Features in k'th class.
                if(Nf==0 or Nck==0):
                    pass
                else:
                   par = (Nfc*N)/(Nf*Nck)
                   pmi = numpy.log(par if par > 0 else 1)
                   res1.append((vc[0],pmi))
            
                
        res1.sort(key=lambda tup: tup[1], reverse=True)   #sorting the feature acoording to pmi value
        with open('full_sorted_pmi_malware_output.txt','w+') as op:
            for feat,pmi in res1:
                op.write(feat+' '+str(pmi)+'\n')
                print(feat+' '+str(pmi))
                
                
                
